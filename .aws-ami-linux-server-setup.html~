<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<title>/var/www/dotfiles/.aws-ami-linux-server-setup.html</title>
<meta name="Generator" content="Vim/7.4">
<meta name="plugin-version" content="vim7.4_v1">
<meta name="syntax" content="conf">
<meta name="settings" content="number_lines,use_css,pre_wrap,no_foldcolumn,expand_tabs,line_ids,prevent_copy=">
<meta name="colorscheme" content="hybrid">
<style type="text/css">
<!--
pre { white-space: pre-wrap; font-family: monospace; color: #bcbcbc; background-color: #ffffff; }
body { font-family: monospace; color: #bcbcbc; background-color: #ffffff; }
* { font-size: 1em; }
.String { color: #afaf5f; }
.LineNr { color: #3a3a3a; }
.Comment { color: #767676; }
-->
</style>

<script type='text/javascript'>
<!--

/* function to open any folds containing a jumped-to line before jumping to it */
function JumpToLine()
{
  var lineNum;
  lineNum = window.location.hash;
  lineNum = lineNum.substr(1); /* strip off '#' */

  if (lineNum.indexOf('L') == -1) {
    lineNum = 'L'+lineNum;
  }
  lineElem = document.getElementById(lineNum);
  /* Always jump to new location even if the line was hidden inside a fold, or
   * we corrected the raw number to a line ID.
   */
  if (lineElem) {
    lineElem.scrollIntoView(true);
  }
  return true;
}
if ('onhashchange' in window) {
  window.onhashchange = JumpToLine;
}

-->
</script>
</head>
<body onload='JumpToLine();'>
<pre id='vimCodeElement'>
<span id="L1" class="LineNr">  1 </span><span class="Comment"># Setting up git repo with hook on a new AWS Linux EC2 instance.</span>
<span id="L2" class="LineNr">  2 </span>
<span id="L3" class="LineNr">  3 </span>File structure:
<span id="L4" class="LineNr">  4 </span>/var/www/git/projectname.git
<span id="L5" class="LineNr">  5 </span>/var/www/html/projectfolder/.git
<span id="L6" class="LineNr">  6 </span>
<span id="L7" class="LineNr">  7 </span><span class="Comment"># Use AWS Management Tool to create a new Ec2 instance, use default security group</span>
<span id="L8" class="LineNr">  8 </span><span class="Comment"># Edit security settings to allow SSH from you IP, MySQL from Server, and HTTP from all</span>
<span id="L9" class="LineNr">  9 </span>
<span id="L10" class="LineNr"> 10 </span><span class="Comment"># Chmod the AWS pem key</span>
<span id="L11" class="LineNr"> 11 </span>sudo chmod 600 ~/.ssh/keyname.pem
<span id="L12" class="LineNr"> 12 </span>
<span id="L13" class="LineNr"> 13 </span>SSH in and get your dependencies installed
<span id="L14" class="LineNr"> 14 </span>
<span id="L15" class="LineNr"> 15 </span><span class="Comment"># Update repo packages</span>
<span id="L16" class="LineNr"> 16 </span>$ sudo yum update
<span id="L17" class="LineNr"> 17 </span>
<span id="L18" class="LineNr"> 18 </span><span class="Comment"># Install Apache 2.4</span>
<span id="L19" class="LineNr"> 19 </span>$ sudo yum install httpd24
<span id="L20" class="LineNr"> 20 </span>
<span id="L21" class="LineNr"> 21 </span><span class="Comment"># Install PHP 5.5</span>
<span id="L22" class="LineNr"> 22 </span>$ sudo yum install php55
<span id="L23" class="LineNr"> 23 </span>
<span id="L24" class="LineNr"> 24 </span><span class="Comment"># Install PHP 5.5 MCrypt</span>
<span id="L25" class="LineNr"> 25 </span>sudo yum install php55-mcrypt
<span id="L26" class="LineNr"> 26 </span>
<span id="L27" class="LineNr"> 27 </span><span class="Comment"># Install Git</span>
<span id="L28" class="LineNr"> 28 </span>$ sudo yum install git
<span id="L29" class="LineNr"> 29 </span>
<span id="L30" class="LineNr"> 30 </span><span class="Comment"># Install Composer</span>
<span id="L31" class="LineNr"> 31 </span>curl -sS <a href="https://getcomposer.org/installer">https://getcomposer.org/installer</a> | php
<span id="L32" class="LineNr"> 32 </span>
<span id="L33" class="LineNr"> 33 </span><span class="Comment"># Make composer.phar global</span>
<span id="L34" class="LineNr"> 34 </span>sudo mv composer.phar /usr/local/bin/composer
<span id="L35" class="LineNr"> 35 </span>
<span id="L36" class="LineNr"> 36 </span><span class="Comment"># Create your project folder</span>
<span id="L37" class="LineNr"> 37 </span>$ cd /var/www/html
<span id="L38" class="LineNr"> 38 </span>$ sudo mkdir project
<span id="L39" class="LineNr"> 39 </span>$ cd project
<span id="L40" class="LineNr"> 40 </span>
<span id="L41" class="LineNr"> 41 </span><span class="Comment"># Setup git repo</span>
<span id="L42" class="LineNr"> 42 </span>$ sudo git init
<span id="L43" class="LineNr"> 43 </span>$ sudo chmod -R ug+rw /var/www/html/yourproject/.git/
<span id="L44" class="LineNr"> 44 </span>$ cd ..
<span id="L45" class="LineNr"> 45 </span>$ sudo chown -R ec2-user:ec2-user yourproject/
<span id="L46" class="LineNr"> 46 </span>$ ls -l // Should say owner and group is ec2-user
<span id="L47" class="LineNr"> 47 </span>$ git config --global user.name <span class="String">&quot;cameron macfarlane&quot;</span>
<span id="L48" class="LineNr"> 48 </span>$ git config --global user.email <span class="String">&quot;cammac1984@gmail.com&quot;</span>
<span id="L49" class="LineNr"> 49 </span>$ cd yourproject
<span id="L50" class="LineNr"> 50 </span>$ sudo vi test.txt
<span id="L51" class="LineNr"> 51 </span>testing123
<span id="L52" class="LineNr"> 52 </span>:w
<span id="L53" class="LineNr"> 53 </span>:q
<span id="L54" class="LineNr"> 54 </span>$ git add .
<span id="L55" class="LineNr"> 55 </span>$ git commit -m <span class="String">&quot;initial&quot;</span>
<span id="L56" class="LineNr"> 56 </span>
<span id="L57" class="LineNr"> 57 </span>$ cd /var/www
<span id="L58" class="LineNr"> 58 </span>$ sudo mkdir git
<span id="L59" class="LineNr"> 59 </span>$ cd git
<span id="L60" class="LineNr"> 60 </span>$ sudo git clone --bare /var/www/html/yourproject/
<span id="L61" class="LineNr"> 61 </span>$ sudo chown -R ec2-user:ec2-user yourproject.git/
<span id="L62" class="LineNr"> 62 </span>    (or it's here: /var/www/git/yourproject/yourproject.git)
<span id="L63" class="LineNr"> 63 </span>
<span id="L64" class="LineNr"> 64 </span>$ cd yourproject.git/hooks
<span id="L65" class="LineNr"> 65 </span>$ sudo vi post-receive
<span id="L66" class="LineNr"> 66 </span>
<span id="L67" class="LineNr"> 67 </span><span class="Comment">#!/bin/sh</span>
<span id="L68" class="LineNr"> 68 </span>GIT_WORK_TREE=/var/www/html/yourfolder git checkout -f
<span id="L69" class="LineNr"> 69 </span>$ :w
<span id="L70" class="LineNr"> 70 </span>$ :q
<span id="L71" class="LineNr"> 71 </span>$ sudo chmod 775 post-receive
<span id="L72" class="LineNr"> 72 </span>$ cd
<span id="L73" class="LineNr"> 73 </span>$ exit
<span id="L74" class="LineNr"> 74 </span>
<span id="L75" class="LineNr"> 75 </span><span class="Comment"># Clone your repo locally</span>
<span id="L76" class="LineNr"> 76 </span>$ cd /var/www
<span id="L77" class="LineNr"> 77 </span>$ git clone serveralias:/var/www/git/project.git
<span id="L78" class="LineNr"> 78 </span>$ cd yourproject
<span id="L79" class="LineNr"> 79 </span>
<span id="L80" class="LineNr"> 80 </span><span class="Comment"># Add your local project files to the new local yourproject folder, delete test.txt</span>
<span id="L81" class="LineNr"> 81 </span>$ git add -u
<span id="L82" class="LineNr"> 82 </span>$ git add .
<span id="L83" class="LineNr"> 83 </span>$ git commit -m <span class="String">&quot;first commit&quot;</span>
<span id="L84" class="LineNr"> 84 </span>$ git push origin master
<span id="L85" class="LineNr"> 85 </span>
<span id="L86" class="LineNr"> 86 </span><span class="Comment"># Get back in the server</span>
<span id="L87" class="LineNr"> 87 </span>$ ssh youproject
<span id="L88" class="LineNr"> 88 </span>
<span id="L89" class="LineNr"> 89 </span>$ cd /var/www/html/yourproject
<span id="L90" class="LineNr"> 90 </span>
<span id="L91" class="LineNr"> 91 </span><span class="Comment"># Install project dependencies that git ignored in push </span>
<span id="L92" class="LineNr"> 92 </span>$ composer install
<span id="L93" class="LineNr"> 93 </span>
<span id="L94" class="LineNr"> 94 </span><span class="Comment"># Allow reading and writing to app/storage folder</span>
<span id="L95" class="LineNr"> 95 </span>$ chmod -R a+rw app/storage
<span id="L96" class="LineNr"> 96 </span>
<span id="L97" class="LineNr"> 97 </span>$ sudo vi /etc/httpd/conf/httpd.conf
<span id="L98" class="LineNr"> 98 </span>
<span id="L99" class="LineNr"> 99 </span>Goto Line: DocumentRoot <span class="String">&quot;/var/www/html/&quot;</span>
<span id="L100" class="LineNr">100 </span>Change To: DocumentRoot <span class="String">&quot;/var/www/html/yourproject/public&quot;</span>
<span id="L101" class="LineNr">101 </span>
<span id="L102" class="LineNr">102 </span>&lt;Directory <span class="String">&quot;/var/www/html/yourproject&quot;</span>&gt;
<span id="L103" class="LineNr">103 </span>    Options +Indexes +FollowSymLinks +MultiViews
<span id="L104" class="LineNr">104 </span>    AllowOverride all
<span id="L105" class="LineNr">105 </span>    <span class="Comment"># Allow open access:</span>
<span id="L106" class="LineNr">106 </span>    Require all granted
<span id="L107" class="LineNr">107 </span>&lt;/Directory&gt;
<span id="L108" class="LineNr">108 </span>
<span id="L109" class="LineNr">109 </span>$ :w
<span id="L110" class="LineNr">110 </span>$ :q
<span id="L111" class="LineNr">111 </span>
<span id="L112" class="LineNr">112 </span><span class="Comment"># Restart Apache, up and running baby!</span>
<span id="L113" class="LineNr">113 </span>$ sudo service httpd restart
<span id="L114" class="LineNr">114 </span>
<span id="L115" class="LineNr">115 </span><span class="Comment"># Install MYSQL Server</span>
<span id="L116" class="LineNr">116 </span>$ sudo yum install mysql55-server
<span id="L117" class="LineNr">117 </span>$ sudo yum install php55-pdo
<span id="L118" class="LineNr">118 </span>$ sudo yum install php55-mysqlnd
<span id="L119" class="LineNr">119 </span>
<span id="L120" class="LineNr">120 </span><span class="Comment"># Configure webserver to start up automatically on reboot:</span>
<span id="L121" class="LineNr">121 </span>$ sudo chkconfig httpd on
<span id="L122" class="LineNr">122 </span>$ sudo service httpd start
<span id="L123" class="LineNr">123 </span>
<span id="L124" class="LineNr">124 </span><span class="Comment"># Configure MySQL to start up automatically on reboot</span>
<span id="L125" class="LineNr">125 </span>$ sudo chkconfig mysqld on
<span id="L126" class="LineNr">126 </span>$ sudo service mysqld start
<span id="L127" class="LineNr">127 </span>
<span id="L128" class="LineNr">128 </span><span class="Comment"># Stop MySQL</span>
<span id="L129" class="LineNr">129 </span>$ sudo /etc/init.d/mysqld stop
<span id="L130" class="LineNr">130 </span>
<span id="L131" class="LineNr">131 </span><span class="Comment"># Login as root</span>
<span id="L132" class="LineNr">132 </span>$ sudo mysqld_safe --skip-grant-tables &amp;
<span id="L133" class="LineNr">133 </span>$ mysql -u root
<span id="L134" class="LineNr">134 </span>$ use mysql;
<span id="L135" class="LineNr">135 </span>$ update user set password=PASSWORD(<span class="String">&quot;enteryourpasswordhere&quot;</span>) where User=<span class="String">'root'</span>;
<span id="L136" class="LineNr">136 </span>$ flush privileges;
<span id="L137" class="LineNr">137 </span>$ quit
<span id="L138" class="LineNr">138 </span>$ sudo /etc/init.d/mysqld stop
<span id="L139" class="LineNr">139 </span>$ sudo /etc/init.d/mysqld start
<span id="L140" class="LineNr">140 </span>
<span id="L141" class="LineNr">141 </span><span class="Comment"># test your connection</span>
<span id="L142" class="LineNr">142 </span>$ mysql -u root -p
<span id="L143" class="LineNr">143 </span>
<span id="L144" class="LineNr">144 </span><span class="Comment"># Restart HTTPD so PDO is up</span>
<span id="L145" class="LineNr">145 </span>$ sudo service httpd restart
</pre>
</body>
</html>
<!-- vim: set foldmethod=manual : -->
