# Setting up git repo with hook on a new AWS Linux EC2 instance.

File structure:
/var/www/git/projectname.git
/var/www/html/projectfolder/.git

# Use AWS Management Tool to create a new Ec2 instance, use default security group
# Edit security settings to allow SSH from you IP, MySQL from Server, and HTTP from all

# Chmod the AWS pem key
sudo chmod 600 ~/.ssh/keyname.pem

SSH in and get your dependencies installed

# Update repo packages
$ sudo yum update

# Install Apache 2.4
$ sudo yum install httpd24

# Install PHP 5.5
$ sudo yum install php55

# Install PHP 5.5 MCrypt
sudo yum install php55-mcrypt

# Install Git
$ sudo yum install git

# Install Composer
curl -sS https://getcomposer.org/installer | php

# Make composer.phar global
sudo mv composer.phar /usr/local/bin/composer

# Create your project folder
$ cd /var/www/html
$ sudo mkdir project
$ cd project

# Setup git repo
$ sudo git init
$ sudo chmod -R ug+rw /var/www/html/yourproject/.git/
$ cd ..
$ sudo chown -R ec2-user:ec2-user yourproject/
$ ls -l // Should say owner and group is ec2-user
$ git config --global user.name "cameron macfarlane"
$ git config --global user.email "cammac1984@gmail.com"
$ cd yourproject
$ sudo vi test.txt
testing123
:w
:q
$ git add .
$ git commit -m "initial"

$ cd /var/www
$ sudo mkdir git
$ cd git
$ sudo git clone --bare /var/www/html/yourproject/
$ sudo chown -R ec2-user:ec2-user yourproject.git/
	(or it's here: /var/www/git/yourproject/yourproject.git)

$ cd yourproject.git/hooks
$ sudo vi post-receive

#!/bin/sh
GIT_WORK_TREE=/var/www/html/yourfolder git checkout -f
$ :w
$ :q
$ sudo chmod 775 post-receive
$ cd
$ exit

# Clone your repo locally
$ cd /var/www
$ git clone serveralias:/var/www/git/project.git
$ cd yourproject

# Add your local project files to the new local yourproject folder, delete test.txt
$ git add -u
$ git add .
$ git commit -m "first commit"
$ git push origin master

# Get back in the server
$ ssh youproject

$ cd /var/www/html/yourproject

# Install project dependencies that git ignored in push 
$ composer install

# Allow reading and writing to app/storage folder
$ chmod -R a+rw app/storage

$ sudo vi /etc/httpd/conf/httpd.conf

Goto Line: DocumentRoot "/var/www/html/" 
Change To: DocumentRoot "/var/www/html/yourproject/public"

<Directory "/var/www/html/yourproject">
	Options +Indexes +FollowSymLinks +MultiViews
	AllowOverride all
	# Allow open access:
	Require all granted
</Directory>

$ :w
$ :q

# Restart Apache, up and running baby!
$ sudo service httpd restart

# Install MYSQL Server
$ sudo yum install mysql55-server
$ sudo yum install php55-pdo
$ sudo yum install php55-mysqlnd

# Configure webserver to start up automatically on reboot:
$ sudo chkconfig httpd on
$ sudo service httpd start

# Configure MySQL to start up automatically on reboot
$ sudo chkconfig mysqld on
$ sudo service mysqld start

# Stop MySQL
$ sudo /etc/init.d/mysqld stop

# Login as root
$ sudo mysqld_safe --skip-grant-tables &
$ mysql -u root
$ use mysql;
$ update user set password=PASSWORD("enteryourpasswordhere") where User='root';
$ flush privileges;
$ quit
$ sudo /etc/init.d/mysqld stop
$ sudo /etc/init.d/mysqld start

# test your connection
$ mysql -u root -p

# Restart HTTPD so PDO is up
$ sudo service httpd restart


