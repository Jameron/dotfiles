<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<title>/var/www/dotfiles/.bashrc.html</title>
<meta name="Generator" content="Vim/7.4">
<meta name="plugin-version" content="vim7.4_v1">
<meta name="syntax" content="bash">
<meta name="settings" content="number_lines,use_css,pre_wrap,no_foldcolumn,expand_tabs,line_ids,prevent_copy=">
<meta name="colorscheme" content="hybrid">
<style type="text/css">
<!--
pre { white-space: pre-wrap; font-family: monospace; color: #bcbcbc; background-color: rgba(0,0,0,0.7); }
body { font-family: monospace; color: #bcbcbc; background-color: #ffffff; }
* { font-size: 1em; }
.Function { color: #ffd75f; }
.Statement { color: #87afd7; }
.Operator { color: #87afaf; }
.LineNr { color: #3a3a3a; }
.Comment { color: #767676; }
.Constant { color: #d75f5f; }
.Special { color: #afaf5f; }
.Identifier { color: #af87af; }
.PreProc { color: #87afaf; }
.String { color: #afaf5f; }
-->
</style>

<script type='text/javascript'>
<!--

/* function to open any folds containing a jumped-to line before jumping to it */
function JumpToLine()
{
  var lineNum;
  lineNum = window.location.hash;
  lineNum = lineNum.substr(1); /* strip off '#' */

  if (lineNum.indexOf('L') == -1) {
    lineNum = 'L'+lineNum;
  }
  lineElem = document.getElementById(lineNum);
  /* Always jump to new location even if the line was hidden inside a fold, or
   * we corrected the raw number to a line ID.
   */
  if (lineElem) {
    lineElem.scrollIntoView(true);
  }
  return true;
}
if ('onhashchange' in window) {
  window.onhashchange = JumpToLine;
}

-->
</script>
</head>
<body onload='JumpToLine();'>
<pre id='vimCodeElement'>
<span id="L1" class="LineNr"> 1 </span><span class="Comment"># .bashrc file, Cameron Macfarlane</span>
<span id="L2" class="LineNr"> 2 </span>
<span id="L3" class="LineNr"> 3 </span><span class="Comment"># Add git branchname completion</span>
<span id="L4" class="LineNr"> 4 </span><span class="Statement">source</span> ~/git-completion.bash
<span id="L5" class="LineNr"> 5 </span>
<span id="L6" class="LineNr"> 6 </span><span class="Comment"># Show active branch in bash</span>
<span id="L7" class="LineNr"> 7 </span><span class="Function">parse_git_branch() {</span>
<span id="L8" class="LineNr"> 8 </span>  git branch <span class="Constant">2</span><span class="Operator">&gt;</span> /dev/null <span class="Operator">|</span> <span class="Statement">sed</span> <span class="Special">-e</span> <span class="Operator">'</span><span class="String">/^[^*]/d</span><span class="Operator">'</span> <span class="Special">-e</span> <span class="Operator">'</span><span class="String">s/* \(.*\)/(\1)/</span><span class="Operator">'</span>
<span id="L9" class="LineNr"> 9 </span><span class="Function">}</span>
<span id="L10" class="LineNr">10 </span><span class="Identifier">PS1</span>=<span class="Operator">&quot;</span><span class="PreProc">${</span><span class="PreProc">debian_chroot</span><span class="Operator">:+</span>(<span class="PreProc">$debian_chroot</span>)<span class="PreProc">}</span><span class="Special">\u</span><span class="String">@</span><span class="Special">\h</span><span class="String">:</span><span class="Special">\w</span><span class="Special">\$</span><span class="String">(parse_git_branch) $ </span><span class="Operator">&quot;</span>
<span id="L11" class="LineNr">11 </span>
<span id="L12" class="LineNr">12 </span><span class="Comment"># Alias tailf as watch</span>
<span id="L13" class="LineNr">13 </span><span class="Statement">alias </span><span class="Identifier">watch</span><span class="Statement">=</span><span class="Operator">'</span><span class="String">tailf</span><span class="Operator">'</span>
<span id="L14" class="LineNr">14 </span>
<span id="L15" class="LineNr">15 </span><span class="Comment"># Alias git as g</span>
<span id="L16" class="LineNr">16 </span><span class="Statement">alias</span> <span class="Identifier">g</span>=<span class="Operator">'</span><span class="String">git</span><span class="Operator">'</span>
</pre>
</body>
</html>
<!-- vim: set foldmethod=manual : -->
